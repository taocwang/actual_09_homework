#encoding: utf-8
import json
import gconf
from dbutils import execute_sql

'''获取所有用户的信息
返回值: [
            {"username" : "kk", "password" : "123456", "age" : 29},
            {"username" : "woniu", "password" : "abcdef", "age" : 28}
        ]
'''
def get_users():
    _sql = 'select * from user;'
    _columns = ('id','username','password','age')
    _rt = []
    _count, _rt_list = execute_sql(_sql,fetch=True)
    for _line in _rt_list:
        _rt.append(dict(zip(_columns, _line)))
    return _rt


'''验证用户名，密码是否正确
返回值: True/False
'''
def validate_login(username, password):
    _sql = 'select * from user where username=%s and password=md5(%s)'
    _count, _rt_list = execute_sql(_sql, (username, password),fetch=True)
    if _count:
        return True


'''检查新建用户信息
返回值: True/False, 错误信息
'''
def validate_add_user(username, password, age):
    if username.strip() == '':
        return False, u'用户名不能为空'

    #检查用户名是否重复
    _users = get_users()
    for _user in _users:
        if username == _user.get('username'):
            return False, u'用户名已存在'

    #密码要求长度必须大于等于6
    if len(password) < 6:
        return False, u'密码必须大于等于6'

    if not str(age).isdigit() or int(age) <= 0 or int(age) > 100:
        return False, u'年龄必须是0到100的数字'

    return True, ''


'''添加用户信息
'''
def add_user(username, password, age):
    _sql = 'insert into user(username, password, age) values(%s, md5(%s), %s)'
    _args = (username, password, age)
    execute_sql(_sql, _args,fetch=False)


'''
获取用户信息
'''

def get_user(username):
    _users = get_users()
    for _user in _users:
        if _user.get('username') == username:
            return _user

    return None

'''
获取用户信息
'''

def find_user(username):
    _users = get_users()
    print "1111111111111"
    print _users
    new_users=[]
    flag = 0
    for _user in _users:
        if username.strip() in _user.get('username'):
            new_users.append(_user)
            flag +=1
    if flag>0:
        return new_users
    else:
        return []

'''检查更新用户信息
返回值: True/False, 错误信息
'''
def validate_update_user(username, password, age):
    if get_user(username) is None:
        return False, u'用户信息不存在'

    #密码要求长度必须大于等于6
    if len(password) < 6:
        return False, u'密码必须大于等于6'

    if not str(age).isdigit() or int(age) <= 0 or int(age) > 100:
        return False, u'年龄必须是0到100的数字'

    return True, ''


'''更新用户信息
'''
def update_user(username, password, age):
    _sql = 'update  user set password=md5(%s),age=%s where username=%s;'
    _args = (password,int(age),username)
    print type(age)
    print _args
    execute_sql(_sql, _args,fetch=False)


'''删除用户信息
'''
def delete_user(username):
    _sql = 'delete  from user where username=%s;'
    _args = (username,)
    execute_sql(_sql, _args,fetch=False)


if __name__ == '__main__':
    # _is_ok, _error = validate_add_user('ada', 'ada23', 26)
    # print _is_ok, _error
    # _is_ok, _error = validate_add_user('ada1', 'ada23', 26)
    # print _is_ok, _error
    # _is_ok, _error = validate_add_user('ada1', 'ada2d3', 'abc')
    # print _is_ok, _error
    # _is_ok, _error = validate_add_user('xiaoxia', 'ada2d3', 26)
    # if _is_ok:
    #     add_user('xiaoxia', 'ada2d3', 26)
    # print get_users()
    # print get_user('kk')
    # update_user('kk', 'abcdef', 30)
    # print get_user('kk')
    # print get_user('kk2')

    _is_ok, _error = validate_update_user('ada', 'ada23', 26)
    print _is_ok, _error
    _is_ok, _error = validate_update_user('ada1', 'ada23', 26)
    print _is_ok, _error
    _is_ok, _error = validate_update_user('ada1', 'ada2d3', 'abc')
    print _is_ok, _error
    _is_ok, _error = validate_update_user('xiaoxia', 'ada2d3', 26)
    print _is_ok, _error
